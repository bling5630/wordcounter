{
  "name": "html-redirect",
  "version": "0.3.0",
  "description": "Generate HTML redirection page",
  "author": {
    "name": "Eugene Sharygin",
    "email": "eush77@gmail.com"
  },
  "license": "MIT",
  "main": "src/index.js",
  "bin": {
    "html-redirect": "cli.js"
  },
  "scripts": {
    "test": "mocha --require should test/"
  },
  "files": [
    "src/",
    "cli.js",
    "usage.txt"
  ],
  "homepage": "https://github.com/eush77/html-redirect",
  "repository": {
    "type": "git",
    "url": "https://github.com/eush77/html-redirect"
  },
  "bugs": {
    "url": "https://github.com/eush77/html-redirect/issues"
  },
  "keywords": [
    "html",
    "redirect",
    "redirection",
    "stream",
    "http",
    "meta",
    "http-equiv"
  ],
  "dependencies": {
    "camelcase-keys": "^1.0.0",
    "dent": "^0.2.0",
    "duplexer2": "0.0.2",
    "escape-html": "^1.0.1",
    "minimist": "^1.1.1",
    "trumpet": "^1.7.0"
  },
  "devDependencies": {
    "html-select": "^2.3.18",
    "html-tokenize": "^1.2.0",
    "mocha": "^2.0.1",
    "regex-format": "^0.2.0",
    "should": "^4.0.4",
    "stream-to-array": "^2.0.2"
  },
  "readme": "[![npm](https://nodei.co/npm/html-redirect.png)](https://nodei.co/npm/html-redirect/)\n\n# html-redirect\n\n[![Build Status][travis-badge]][travis] [![Dependency Status][david-badge]][david]\n\n[travis]: https://travis-ci.org/eush77/html-redirect\n[travis-badge]: https://travis-ci.org/eush77/html-redirect.svg\n[david]: https://david-dm.org/eush77/html-redirect\n[david-badge]: https://david-dm.org/eush77/html-redirect.png\n\nGenerate HTML redirection page.\n\n## Example\n\n```js\nhtmlRedirect('http://example.com')\n  .pipe(fs.createWriteStream('example1.html'));\n```\n\nexample1.html:\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>(redirect)</title>\n    <meta http-equiv=\"refresh\" content=\"1;url=http://example.com/\">\n    <script>window.location.replace(\"http://example.com/\");</script>\n  </head>\n  <body><a href=\"http://example.com/\">Click me</a></body>\n</html>\n```\n\n## API\n\n### htmlRedirect(url, [options])\n\nReturns a readable stream of HTML.\n\n| Option      | Type    | Required? | Default |\n| :---------- | :------ | :-------: | :------ |\n| timeout     | number  | No        | `1`     |\n| title       | string  | No        |         |\n| placeholder | string  | No        |         |\n| replaceBody | boolean | No        | `false` |\n\n`options.timeout` is a timeout for meta-tag redirection. JS redirection will fire instantaneously regardless of the value of this option.\n\n`options.title` is the value of `<title>`.\n\n`options.placeholder` is either the text under default `<a>` or the whole `<body>` in HTML depending on `options.replaceBody`.\n\n### htmlRedirect.createStream(url, [options])\n\nReturns a transform stream. Body content &rarr; HTML page.\n\n| Option      | Type    | Required? | Default |\n| :---------- | :------ | :-------: | :------ |\n| timeout     | number  | No        | `1`     |\n| title       | string  | No        |         |\n\n## CLI\n\n```\nUsage:  html-redirect [OPTION]... URL\n\nOptions:\n  --title           Page title\n  --placeholder     Text under <a> in the page body, or the page body itself\n  --replace-body    If true, --placeholder replaces the whole body of a page\n  --timeout         http-equiv refresh timeout\n```\n\n## More examples\n\n### Set some options\n\n```js\nhtmlRedirect('http://example.com', {\n  timeout: 0,\n  title: 'please wait...',\n  placeholder: 'Your browser does not support redirection. Please click this link.'\n}).pipe(fs.createWriteStream('example2.html'));\n```\n\nexample2.html:\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>please wait...</title>\n    <meta http-equiv=\"refresh\" content=\"0;url=http://example.com/\">\n    <script>window.location.replace(\"http://example.com/\");</script>\n  </head>\n  <body><a href=\"http://example.com/\">Your browser does not support redirection. Please click this link.</a></body>\n</html>\n```\n\n### Replace body\n\n```js\nhtmlRedirect('http://example.com', {\n  timeout: 3,\n  title: 'please wait...',\n  placeholder: 'Your browser does not support redirection. Please click <a href=\"http://example.com\">this link</a>.',\n  replaceBody: true\n}).pipe(fs.createWriteStream('example3.html'));\n```\n\nexample3.html:\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>please wait...</title>\n    <meta http-equiv=\"refresh\" content=\"3;url=http://example.com/\">\n    <script>window.location.replace(\"http://example.com/\");</script>\n  </head>\n  <body>Your browser does not support redirection. Please click <a href=\"http://example.com\">this link</a>.</body>\n</html>\n```\n\n### Use it as a transform stream\n\nexample4.js:\n```js\nprocess.stdin\n  .pipe(htmlRedirect.createStream('http://example.com/'))\n  .pipe(process.stdout);\n```\n\nTry it in the console:\n```\nprintf 'Contents from the <b>stdin</b>.' |node example.js\n```\n\n```\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>(redirect)</title>\n    <meta http-equiv=\"refresh\" content=\"1;url=http://example.com/\">\n    <script>window.location.replace(\"http://example.com/\");</script>\n  </head>\n  <body>Contents from the <b>stdin</b>.</body>\n</html>\n```\n\n## Install\n\n```shell\nnpm install html-redirect\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "html-redirect@0.3.0",
  "dist": {
    "shasum": "a27165601ac0cfcac1d45ba2024e8cdb683073cf"
  },
  "_from": "html-redirect@",
  "_resolved": "https://registry.npmjs.org/html-redirect/-/html-redirect-0.3.0.tgz"
}
